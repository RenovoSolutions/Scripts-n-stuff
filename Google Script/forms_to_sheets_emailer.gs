//Example of an emailer for Google Forms/Sheets
//Grab some data (e.values) using submission values (columns start at 0 and match the layout of the sheet)... value 0 is usually submission time
//Should be set to trigger on form submit

function formSubmitReply(e) {
  //Get the second and third columns, in this example first and last name
  var userFirstname = e.values[1];
  var userLastname = e.values[2];
  
  //Get the 4th column, in this example, email
  var submitterEmail = e.values[3];
  
  //Format an HTML message
  var msgHtml = submitter email + ", a request for the following user has been created: <br/><br/>" +
                    "<b>First Name: </b>" + userFirstname + "<br/>" +
                    "<b>Last Name: </b>" + userLastname + "<br/>" +
                    "A request ticket is being created and we'll get back to you as quickly as possible. This message is automatically generated by your submission of the form.";
  
  //Convert HTML to plain text if the end user needs to view in non-HTML format
  //Clears all tags and converts breaks to new lines
  var msgPlain = msgHtml.replace(/\<br\/\>/gi, '\n').replace(/(<([^>]+)>)/ig, "");
  
  //You can choose multiple delivery methods, or add cc users (or remove the CC all together)
  //MailApp.sendEmail has several different parameters you can use
  
  //Flags as a noreply, only works with Google Apps domains not personal Gmails
  MailApp.sendEmail(submitterEmail, "New Request for " + userFirstname + " " + userLastname, msgPlain, {name:"Submitted Request", cc: "user@domain.com", htmlBody: msgHtml, noReply: True});
  
  //Send from whoever owns the sheet or setup the trigger but set a different replyto
  //MailApp.sendEmail(submitterEmail, "New Request for " + userFirstname + " " + userLastname, msgPlain, {name:"Submitted Request", cc: "user@domain.com", htmlBody: msgHtml, replyTo: "support@domain.com"});
}
